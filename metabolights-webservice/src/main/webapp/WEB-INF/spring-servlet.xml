<?xml  version="1.0" encoding="UTF-8"?>
<!--
  ~ EBI MetaboLights - http://www.ebi.ac.uk/metabolights
  ~ Cheminformatics and Metabolism group
  ~
  ~ European Bioinformatics Institute (EMBL-EBI), European Molecular Biology Laboratory, Wellcome Trust Genome Campus, Hinxton, Cambridge CB10 1SD, United Kingdom
  ~
  ~ Last modified: 6/9/14 2:56 PM
  ~ Modified by:   conesa
  ~
  ~
  ~ Â©, EMBL, European Bioinformatics Institute, 2014.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~    http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <context:component-scan base-package="uk.ac.ebi.metabolights.webservice" />
    <!--<context:annotation-config/>-->

    <!--  this makes references to picture and style sheets work -->
    <mvc:annotation-driven/>

    <!-- JSON parser configuration-->
    <!--<bean id="guavaObjectMapper" class="com.fasterxml.jackson.databind.ObjectMapper"/>-->

    <!--<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">-->
        <!--<property name="targetObject"><ref local="guavaObjectMapper" /></property>-->
        <!--<property name="targetMethod"><value>registerModule</value></property>-->
        <!--<property name="arguments">-->
            <!--<list>-->
                <!--<bean id="guavaModule" class="com.fasterxml.jackson.datatype.guava.GuavaModule"/>-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->


    <!--<mvc:annotation-driven>-->
        <!--<mvc:message-converters register-defaults="true">-->
            <!--<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">-->
                <!--<property name="objectMapper">-->
                    <!--<ref  local="guavaObjectMapper"/>-->
                <!--</property>-->
            <!--</bean>-->
        <!--</mvc:message-converters>-->
    <!--</mvc:annotation-driven>-->

    <mvc:default-servlet-handler/>

    <jee:jndi-lookup id="isatabConfigurationLocation" jndi-name="java:comp/env/isatabConfigurationLocation" />
    <jee:jndi-lookup id="publicStudiesLocation" jndi-name="java:comp/env/publicStudiesLocation" />
    <jee:jndi-lookup id="privateStudiesLocation" jndi-name="java:comp/env/privateStudiesLocation" />
    <jee:jndi-lookup id="dataSource" jndi-name="dataSource" resource-ref="true" />


    <!--&lt;!&ndash;Configure the DAOFactory initialize method&ndash;&gt;-->
    <!--<bean id="DAOFactoryInitializer" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">-->
        <!--<property name="targetClass">-->
            <!--<value>uk.ac.ebi.metabolights.repository.dao.DAOFactory</value>-->
        <!--</property>-->
        <!--<property name="targetMethod">-->
            <!--<value>initializeWithDataSource</value>-->
        <!--</property>-->
        <!--<property name="arguments">-->
            <!--<list>-->
                <!--<ref bean="isatabConfigurationLocation"/>-->
                <!--<ref bean="publicStudiesLocation"/>-->
                <!--<ref bean="privateStudiesLocation"/>-->
                <!--<ref bean="dataSource"/>-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->

    <bean id="DAOFactory"
          class="uk.ac.ebi.metabolights.repository.dao.DAOFactory"
          factory-method="initializeWithDataSource">
        <constructor-arg index="0" ref="isatabConfigurationLocation"/>
        <constructor-arg index="1" ref="publicStudiesLocation"/>
        <constructor-arg index="2" ref="privateStudiesLocation"/>
        <constructor-arg index="3" ref="dataSource"/>
    </bean>

    <bean id="userDAO"
          class="uk.ac.ebi.metabolights.repository.dao.hibernate.UserDAO"
          autowire="byName"
          factory-bean="DAOFactory"
          factory-method="getUserDAO"/>




    <!-- Hibernate congiguration-->
    <!--<tx:annotation-driven />-->
    <!--<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">-->
        <!--<property name="sessionFactory" ref="sessionFactory" />-->
    <!--</bean>-->

    <!--<bean id="sessionFactory"-->
          <!--class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">-->
        <!--<property name="dataSource" ref="dataSource" />-->
        <!--<property name="packagesToScan"-->
                  <!--value="uk.ac.ebi.metabolights.webservice.model" />-->
        <!--<property name="hibernateProperties">-->
            <!--<props>-->
                <!--<prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</prop>-->
            <!--</props>-->
        <!--</property>-->
    <!--</bean>-->

    <import resource="spring-security.xml"/>

</beans>
