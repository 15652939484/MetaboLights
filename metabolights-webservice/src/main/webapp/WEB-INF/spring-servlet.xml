<?xml  version="1.0" encoding="UTF-8"?>
<!--
  ~ EBI MetaboLights - http://www.ebi.ac.uk/metabolights
  ~ Cheminformatics and Metabolism group
  ~
  ~ European Bioinformatics Institute (EMBL-EBI), European Molecular Biology Laboratory, Wellcome Trust Genome Campus, Hinxton, Cambridge CB10 1SD, United Kingdom
  ~
  ~ Last modified: 6/9/14 2:56 PM
  ~ Modified by:   conesa
  ~
  ~
  ~ Â©, EMBL, European Bioinformatics Institute, 2014.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~    http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <context:component-scan base-package="uk.ac.ebi.metabolights.webservice" />
    <!--<context:annotation-config/>-->

    <!--  this makes references to picture and style sheets work -->
    <mvc:annotation-driven/>

    <mvc:default-servlet-handler/>


    <!--
	Provider of SpringApplication Context
	Source: http://blog.jdevelop.eu/2008/07/06/access-the-spring-applicationcontext-from-everywhere-in-your-application/
	-->
    <bean id="contextApplicationContextProvider" class="uk.ac.ebi.metabolights.webservice.services.ApplicationContextProvider"></bean>

    <!--  register the application properties -->
    <bean id="propertyConfigurer" class="uk.ac.ebi.metabolights.webservice.utils.PropertiesUtil">
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
        <property name="locations">
            <list>
                <!--<value>classpath:application.properties</value>-->
                <!--<value>"file:#{isatabuploaderconfig}hibernate.properties"</value>-->
            </list>
        </property>
    </bean>


    <!--JNDI variable from tomcat context files-->
    <jee:jndi-lookup id="isatabConfigurationLocation" jndi-name="java:comp/env/isatabConfigurationLocation" />
    <jee:jndi-lookup id="publicStudiesLocation" jndi-name="java:comp/env/publicStudiesLocation" />
    <jee:jndi-lookup id="privateStudiesLocation" jndi-name="java:comp/env/privateStudiesLocation" />
    <jee:jndi-lookup id="dataSource" jndi-name="dataSource" resource-ref="true" />

    <!-- Email service settings-->
    <jee:jndi-lookup id="mailServer"		        jndi-name="java:comp/env/mailServer"/>
    <jee:jndi-lookup id="EBIHost"		            jndi-name="java:comp/env/EBIHost"/>
    <jee:jndi-lookup id="curationEmailAddress"		jndi-name="java:comp/env/curationEmailAddress"/>

    <jee:jndi-lookup id="uploadDirectory"           jndi-name="java:comp/env/uploadDirectory" />

    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="#{mailServer}"/>
    </bean>
    <bean id="velocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
        <property name="velocityProperties">
            <value>
                resource.loader=class
                class.resource.loader.class=org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
            </value>
        </property>
    </bean>



    <bean id="DAOFactory"
          class="uk.ac.ebi.metabolights.repository.dao.DAOFactory"
          factory-method="initializeWithDataSource">
        <constructor-arg index="0" ref="isatabConfigurationLocation"/>
        <constructor-arg index="1" ref="publicStudiesLocation"/>
        <constructor-arg index="2" ref="privateStudiesLocation"/>
        <constructor-arg index="3" ref="dataSource"/>
    </bean>

    <bean id="userDAO"
          class="uk.ac.ebi.metabolights.repository.dao.hibernate.UserDAO"
          autowire="byName"
          factory-bean="DAOFactory"
          factory-method="getUserDAO"/>


    <import resource="spring-security.xml"/>

    <bean id="queueManager" class="uk.ac.ebi.metabolights.webservice.queue.SubmissionQueueManager"/>

</beans>
